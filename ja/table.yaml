#!/bin/env ruby -r yaml -r pp -e 'pp YAML.load(ARGF.read())'
# [訳語置き換え表] 正規表現が長い順に適用される
# 全体設定: 個別設定の後に適用される
global:
  # Rust
  - 錆: Rust
  - Rustプログラミング言語: 演譜言語Rust
  - Rustaceans: ラステーシャン
  - ルーテア人: ラステーシャン
  - ルータスタン: ラステーシャン
  - ルーテシアン: ラステーシャン
  - と呼ぶ愚かなニックネーム: のたわいない名前

  # 章立て・見出し
  - セクション: 章
  - ゲームの推測: 数字当てゲーム
  - 予想ゲーム: 数字当てゲーム
  - ゲームを推測するため: 数字当てゲーム
  - 効果的なRust: 実践 Rust
  - トラブルシューティング: 困ったときは
  - ケーススタディ: 事例で学ぶ

  # 構文
  - ケースの?分析: 場合分け
  - (?<!Haskellなどの)関数(?!型|スタイル): 機能
  - 機能体: 機能本体
  - ファンクション: 機能
  - インデント: 字下げ
  - コメント: 注釈
  - コメントアウト: コメント化
  - アノテーション: 補注
  - プレースホルダ: 場所取り
  - バインディング: 束縛
  - バインド: 束縛
  - パターン(!?展開): 模式
  - パターンマッチ(ング)?: 模式照合
  - ステートメント: 文
  - メソッド: 操作法
  - メソッド受信者: 操作の受け手
  - 囲みスコープ: 外側の有効範囲
  - (?<!囲み)(有効)?スコープ: 有効範囲
  - スコーピング: 有効範囲決定

  #- ループ: 繰り返し
  - ルーピング: 繰り返し
  - インポート: 輸入
  - エクスポート: 輸出
  - 再輸出: 再輸出
  - モジュール: 役区
  - モジュールシステム: 役区体系
  - ブロック: 段落
  - リテラル: 直書き
  - 形質: 特性
  - 特質: 特性
  - 特色: 特性
  - 特性[境限]界: 特性縛り
  - (?<!FFI)境界(?!を[超越]える|チェック)線?: 縛り
  - 派生: 導出
  - キーワード: 予約語
  - メンバー?フィールド: 要素欄
  - メンバー?: 要素
  - フィールド: 欄
  - ネストされた: 入れ子になった
  - (構文上の)?砂糖: 略記法
  - シンタックスシュガー: 略記法
  - コンストラクター?: 構築子
  - エイリアス: 別名
  - エイリアシング: 別名付与
  - インデックス: 添字
  - 和の型: 和型
  - ポインタ: 指し手
  - リファレンス: 参照
  - 閉鎖: 閉包
  - クロージャー?: 閉包
  - 「クローズ」: 「閉じ込め」
  - フリー変数: 自由変数 #　遊項
  - オペレーター?: 演算子

  # 総称型
  - スーパージェネリック: 超総称的
  - ジェネリックス?: 総称化
  - ジェネリックス?型: 総称型
  - ジェネリックパラメーター: 総称パラメーター
  - generic parameters: 総称パラメーター

  # 型と意味論
  - タイプ: 型
  - タイプチェック: 型検査
  - (タイプ)?シグネチャー?: 型注釈
  - プリミティブ型?: 基本型
  - ブール値: 真偽値
  - ストリング: 文字列
  - タプル: 組
  - アレイ: 配列
  - コレクション: 集まり
  - 浮動小数点型: 浮動小数点数型
  - 署名された: 符号つき
  - 無署名の: 符号なし
  - オーバーライド: 上書き
  - オーバーロード: 多重定義
  - 過負荷: 多重定義
  - パラメトリック多形性: パラメータ多相性
  - スタティックス?: 静的
  - ダイナミック: 動的
  - (null|ヌル)可能: nullあり
  - ((null|ヌル)不可能|非(null|ヌル)可能): nullなし
  - 不透明: 目隠し
  - 多型: 多相性
  - 単一形態: 単相化法
  - オブジェクト: 対象
  - 強制(変換)?(?!的): 強制型変換
  - レコード: 記録票
  - オブジェクトセーフ: 対象化安全
  - アクション: 動作
  - サイジング: 可変長

  # ソースコードを中心とする概念群
  - アプリケーション: 譜体
  - インストーラー?: 導入譜
  - サンプルコード: 譜面例
  - スクリプト: 台譜
  - 前奏曲: 前奏譜
  - コード: 譜面
  - コードレビュー: 譜面精査
  - コーディング: 作譜
  - コーディングスタイル: 作譜作法
  - コンパイル: 製譜
  - コンパイラ: 製譜器
  - 情報源: 原譜
  - ソースファイル: 原本
  - ソースコード: 原譜
  - ソフトウェア: 譜体
  - バイナリ: 二進譜
  - プログラマー?: 演譜師
  - プログラミング: 演譜
  - プログラム: 算譜
  - ライブラリ: 譜集
  - 図書[室館]: 譜集
  - インライン(?=展開|化): 入行
  - インライン(?=で|エラー): 行内

  # 一般名詞
  - コンピューター?: 計算機
  - コンセプト: 概念
  - セマンティクス: 意味論
  - ツール: 道具
  - ツールチェーン: 工程譜
  - ツーリング: 道具立て
  - 開発者ツール: 開発用具
  - セットアップ: 設定
  - エディター?: 書房
  - リソース: 資源
  - コンテキスト: 文脈
  - プレーンテキスト: 平文
  # - テキスト: 文言
  - スクリーン: 画面
  - マニュアル: 説明書
  - ウィンドウ: 窓
  - トピック: 話題
  - デザイン: 設計
  - トレードオフ: 相殺取引
  - オフライン: 接続なし
  - アンダースコア: 下線
  - 紹介: 導入
  - 矩形: 長方形
  - メカニズム: しくみ
  - バックグラウンド: 背景
  - 短い手: 縮めた表現
  - カスタム(?=型|誤り|の|属性|スマート): 独自
  - カスタム: 独自の
  - サイエンス: 科学
  - ユーザー?: 利用者

  # Cargo
  - 貨物: カーゴ
  - プロジェクト: 企画
  - (?<!通い)木?箱(?!の参照|から出る): 通い箱
  - クレート: 通い箱
  - 木枠: 通い箱
  - バージョン: 版
  - セマンティックバージョン: 意味つき付版
  - ダウンストリーム: 下流
  - レジストリ: 登記簿
  - ワークスペース: 作業空間

  # システム
  #- システム: 算系
  - オペレーティングシステム: 基本算系
  - システムライブラリ: 算系譜集
  - (?<=多数の|並行|x86|Windows|Unix|ホスト|特定の|ベースの|ンストールした)システム: 算系
  - 型の?システム: 型体系
  - タイプの?・?システム: 型体系
  - (オーナーシップ|所有権?)システム: 所有権体系
  - トップレベル: 最上位
  - アンインストール: 撤去
  - インストール: 導入
  - ビルドシステム: 組立系
  - マネージャー?: 管理系
  - ターミナル: 端末
  - コンソール: 操作台
  - コマンドライン: 命令行
  - コマンド: 命令
  - ターゲット: 目標
  - シェル: 司得
  - スターグロブ: パターン展開
  - star glob: パターン展開
  - globbing: パターン展開
  #- ホームディレクトリ: 地階
  #- ルートディレクトリ: 天階
  #- ディレクトリ: 所階
  # 語尾・語調
  - ですか？: でしょうか？
  - みよう。: みましょう。
  - てる？: ているのでしょう？
  - ではない。: ではありません。
  - する。: します。
  - (?<!す)る。: ます。
  # - 得る。: 得ます。
  # - りる。: ります。
  - 示す。: 示します。
  - った。: りました。
  - だろう。: でしょう。
  - す\.(?!\.): す。

  # 日本語らしさ
  - ：: 。
  - 彼らは: それらは
  - (私たち|我々)[のがは]、?(ための)?: ""
  - 私たちのための、?: ""
  - あなたを愛する: すごく喜ぶ
  - ええとああ！: そんなはずでは！
  - どうしてこれなの？: どうしてこうなっているのでしょう？
  - (?<!は)あなた[はが]、?(?![^！？。\n]+[！？]): "" # 他の主語がなく！？で終わらない場合のみ
  - あなたの(?!ために|Rust|特定の): ""
  - あなたの構造: 作った構造

  # 組版
  - ！\B: "！　"
  - ？\B: "？　"
  - 括弧: かっこ
  - " / ": / # ファイルパス等
  - ファイル名。: "ファイル名： "
  - リスト([-\d]+)。: "リスト\\1： "

  # コンビネーター
  - 結合子: 組子
  - コンビネーター?: 組子
  - コンビニエーター?: 組子
  - コンバイナ: 組子
  - combinators: 組子
  - 影響コンビネータ: 作用組子
  - コンビネーション: 組子
  # 実装
  - インプリメンテーション: 実装
  - インプラント: 実装
  - インプレッション: 実装
  - インプリメント: 実装
  - impls: 実装
  # ラッパー
  - ラッパー: の包み
  - ラップされ: 包まれ
  - ラップする: 包む
  - ラップし: 包み
  - ラッビングして: 包んで
  - リラップ: 包み直し
  - ラッパー関数: 包み隠し用の機能
  - アンラッピング: つけはがし
  - アンラップされた: はがされた
  - アンラップ: はがし
  # 寿命
  - 生涯: 寿命
  - 生存期間: 寿命
  - ライフタイム: 寿命
  - ライフタイムエリージョン: 寿命省略
  - ライフタイム・?エリート: 寿命省略
  - エリジョン: 省略
  # テスト
  - 高価なテスト: 時間のかかるテスト
  - グループ化: グループ化
  - ヘルパー機能: 補助機能
  - ヘルパー: 補助譜
  - ファンクション・テスト: 機能テスト
  - モジュール・テスト: 役区テスト
  - \"?ユニットスタイル\"?の?テスト: 単体テスト
  - \"?統合スタイル\"?の?テスト: 統合テスト
  # Someなんとか
  #- いくつかの: 多少の
  - いくつかの(Rust|錆): Rustのさわり
  - いくつかの(?=詳細|有用|有益): ""
  - いくつかのデータ: それ用のデータ
  - いくつかの行: 数行
  - いくつかの(?=(システム)?言語): 他の
  - いくつかの(?=記憶|余分|注意): 多少の
  - いくつかの(?=開発資料): 何らかの
  - いくつかの(?=項目|数値): 複数の
  - いくつかの(?=側面|欄|特定): 一部の
  - いくつかのランダムな: 適当な
  # 並列処理
  - スレッド: 走脈
  - マルチスレッド: 多脈処理
  - 並行性: 並列実行
  # 借用
  - 借り(?![たてまる]): 借用
  - 貸借: 借用
  - チェッカー?: 検査器
  - ダングリング: 行方不明の
  - フリー後の使用: 開放後使用
  - ドロップ: 脱落
  - ドロップされた: 脱落した
  # 最適化
  #- インライン:
  # 翻訳時の不具合対策
  - "`秒": "`" # e.g. `mod`s
  - <!--[-]*-->: "" # テーブルの２行目を修正
  # - <!--[-|]*>: "" # テーブルの２行目等を修正
  # - \ \|-->\|?: --> # テーブルセルを修正
  - "が`(\\w+)`ます。": "があります。"
  - "すること`(\\w+)`。": "することです。"

  # 式
  - 表現ベース: 式指向
  - (?<=文ではなく|`match`|`if`)表現: 式
  # オプション
  - オプションで現れる: 現れるかもしれない
  - オプションで式で終わる: 式で終わるかもしれない
  - オプションの注釈: なくてもよい注釈
  - (?<=制御する|すべての|使用可能な)オプション: 選択肢
  - オプション(?=[がとはにを]): 選択肢

  - 印刷: 印字
  - プリント(アウト)?: 印字
  - エンコード: 符号化
  - エンコーディング: 符号化
  - ステータスコード: 結果番号
  - デコード: 解読
  - 終了コード: 終了コード
  - リンカー: 結合器
  - ドキュメンテーション: 開発資料集
  - ドキュメント: 開発資料
  - "[3三]重墓地?": 3重スラッシュ
  - ローカルであり: 局所的であり
  #- ローカル: 手元
  - のコビー: の写し
  - プレーン: そのまま
  - エラー: 誤り
  #- ソースディレクトリ:
  - ビルド: 組み上げ
  - ビルディング: 組み上げ
  - プロファイル: プロファイル

  - バリアント: 場合値
  - variant: 場合値
  - 変種: 場合値
  - (?<!コマンドでいくつかの)バリエーション: 場合値

  - インバリアント: 不変条件
  - 合計: 和
  - グローバル: 大域
  - デフォルトで: 自動的に
  - デフォルト: 黙用
  - エントリー?ポイント: 開始地点
  - ハンドル: 手綱
  - 鋳造: 型
  - サブ: 下位
  - クラッシュ: 異常終了
  - インスタンス: 実例
  - エコシステム: 生態系
  - 回帰: 退行現象
  - ミスマッチ型: 型違い
  - 撮影: 捕捉
  - 「影」: 遮蔽
  - シャドウ: 遮蔽
  #- "(?<![ァ-ン]])ライン": 行
  - キャッチ: 捕捉
  - 所有システム: 所有権体系
  - メモリー?の: 記憶域の
  - メモリー?: 記憶
  - フィーチャー?: 特徴
  - オーナーシップ: 所有権
  - ランタイム: 実行時
  - デベロッパー?: 開発者
  - 精神モデル: 心的モデル
  - パラメータ: パラメータ
  - シナリオ: 場合
  - ジェネリック: ジェネリック
  - パラメーター?・?リスト: パラメータリスト
  - 参照パラメーター?: 参照パラメータ
  - 、人間工学、: 、使いやすさ、
  - 人間工学(?=[とを]): 使いやすさ
  - 人間工学になります: 使いやすい実装
  - 人間工学的な?理由から: 使い勝手の理由から
  - 人間工学的なエラー処理: 使い勝手のよい誤り処理
  - 人間工学的にします: 使いやすくします
  - 人間工学的にする: 使い勝手を改善する
  - 人間工学に(基づいた|富んだ): 使い勝手のよい
  - 人間工学的な方法: 使い勝手のよい
  - 人間工学に基づいて: 利便性を保ちながら
  - 不当な: 不適当
  - 不合理な: 筋が通らない
  - ディスパッチ: 指名
  - プライベート: 内部用
  - インター?フェ[ーイ]ス: 接点
  #- ルート: ルート
  - リンクする: 結合する
  - パブリック: 公開
  - マッピング: マッピング
  - ワイルドカード: ワイルドカード
  - アイテム: 項目
  - グロブ: グロブ
  - プラットフォーム: 基盤環境
  - フォーム: 形式
  - マッチング: 照合
  - マッチャー: マッチャー
  - フラグメント: 断片
  - トークン: 字句
  - スプライス: スプライス
  - プレイヤー: プレイヤー
  - (?<!プ)レイヤー: 層
  - バロックマクロ: バロックマクロ
  - セパレータ: 区切り文字
  - ユースケース: 使用例
  - 呼び出しサイト: 呼び出し位置
  - フィードバック: フィードバック
  - デバッグ: 虫取り
  - キャプチャ: 捕獲
  - バランスをとる: 対応させる
  - ボディー?: 本体
  - トラバーサル: 探索
  - ダウンロード: 入荷
  - ロード: 読み込み
  - エクササイズ: 練習問題
  - ブランチ: 分岐
  - アーム: 分岐
  - 腕: 分岐
  - にアクセス可能: が操作可能
  - チュートリアル: チュートリアル
  - フレームワーク: Framework #macOS
  - スタックオーバーフロー: スタック・オーバーフロー
  - スタックフレーム: 山積み枠
  - スタック(?![オフ]): 山
  - フレーム: 枠
  - ヒープ: 原
  - アドレス: 番地
  - テンプレート: ひな型
  - ディナープレート: 洋食器
  - プレート: 皿
  # - ハングアップを取得しますか？: ハングアップ???
  - 深い例: 具体例 #?
  - スペースを割り当て: 空間を割り当て
  - アロケータ: 割当譜
  - 借り入れ: 借用
  - クリーンアップ: 後始末
  - ガベージコレクタ: ごみ集め部
  - ガベージコレクション: ごみ集め
  - ストレージ: 格納庫
  - プール: 貯留庫
  - モデル: 模型
  - マシン: 機械
  - インクリメント: 増分
  - デクリメント: 減分
  - ポイントで: 地点で
  - フロントエンド: フロントエンド
  - ファーストクラス: 一級市民
  - ディストリビューション: 頒布物
  - コンベンション: 慣例
  - アルゴリズム: 計算手続き
  - タイトル: 題名
  - 公共の: 公開された
  - スロー: 送出
  - リント: 残塵
  - カスタマイズする: カスタマイズする
  - レンダリング: 描出
  - コンテンツ: 内容
  - セキュリティノート: 安全上の注意
  - Pro-tip: ひとこと
  - もう1人: もう１つ
  - サイドノート: はしがき
  - エミュレート: 再現
  - インバリアント: 不変条件
  - 解析ルーチン: 解析ルーチン
  - リファクタリング: リファクタリング
  - コンポーネント: 部品
  - 早期(返品|復帰): 早期復帰
  - (コントロール|制御)フロー: 制御構造
  - コントロール: 制御
  - スーパージェネリック: スーパージェネリック
  - 因果連鎖: 因果連鎖?
  - ユーティリティ: ユーティリティ
  - コントラクト: 約束事
  - インプリケーション: 示唆
  - リフレクション: リフレクション
  - オーバーヘッド: オーバーヘッド
  - パー[サザ]: 構文解析器
  - ラピッドプロトタイピング: ラピッドプロトタイピング
  - イテレータ: 反復子
  - ショートカット: 近道
  - タスク: 仕事
  - ヘルプ: 手引き
  - ヘルプを: 手助け
  - ユーザーエクスペリエンス: 使用感
  - 練習として: 練習課題として
  - スタンダードから: 標準入力から
  - フォーマット: 形式
  - アーカイブ: 収納
  - フリーの引数: フリーの引数
  - 外国の: 外部の
  - コールバック: 呼び戻し
  - デストラクタ: 破棄子
  - トリガー?: トリガー
  - チャン?ネル: チャネル
  - リンケージ: リンクすること
  - グルー: グルー
  - ネイティブ: ネイティブ
  - 参照解除: 参照解除
  - レイアウト: 配置
  - パディング: 詰めもの
  - スライス: スライス
  - サイクル: 円環
  - ディープコピー: ディープコピー
  - 突然変異: 変更
  - 変異性: 可変性
  - 変異: 変更
  - アトミックな操作: 瞬間的な操作
  - シングル: 単一
  - 2回タイプする: 二度打つ
  - トリプル: 3つの
  - ミューテータ: 変更者
  - コール: 呼び出し
  - アリティ: 項数
  - プロトコル: 約束事
  - ロギング: 動作記録
  - カテゴリ: 分類
  - よくサポート: よく手入れ
  - プロセス: 過程
  - あなたがフォローしてきた: あなたがフォローしてきた
  - ベアボーン: 骨組みだけ
  - ニース: ナイス
  - ヒットリターン: エンターキーを打つ
  - ロックファイル: 固定ファイル
  - ジェネレータ: 生成器
  - キー概念: 主な概念
  - 住んでいる: 存在している
  - 迷惑になる: わずらわしくなる
  - クイックアンドダーティー?: 間に合わせの
  - 管理言語: おまかせ言語
  - 伝統的に: 従来
  - 匿名: 無名
  - システムの言語: 算系言語
  - クリックされます: ぴったりと収まります
  - 関数スタイル: 関数型演譜
  - アングルブラケット: 角かっこ
  - 山括弧: 角かっこ
  - 心配の良い分離: 良い関心の分離
  - 社内組織: 内部の構成
  - コンストラクション: 構成要素
  - スピード: 速度
  # レベル
  - レベル: 水準
  - 下位レベル: 低水準
  - (?<=2つの|1つ上の|ルート|言語)レベル: 側
  - 複数のレベル: 複数の段階
  - 抽象レベル: 抽象化水準
  - り返しレベル: り返し階層
  - サーバー?: 提供器
  - サービス: 役務
  - ドメイン: 特定領域
  - スキル: 技能
  - ゲートキーパー: 門番
  - ロジック: 論理
  - 無痛で: 苦しみなく
  - 生産で: 本番環境で
  - 生産コード: 本番の譜面
  - デバイス: 機器
  - トランスコード: 変換
  - バイオインフォマティクス: 生命情報科学
  - オーディオ: 音声
  - ビデオ: 動画
  - オープンソース: 公開原譜
  - レガシー: 古くさい
  - テクニック: 技法
  - ベストプラクティス: 最善の慣行
  - ランダム値: 乱数
  - ランダムな: 適当に選んだ
  - スタイル: 作法 # or 流儀
  - フォーマッタツール: 整形器
  - 形式し: 整形し
  - シーケンス: 列
  - イン行: インライン
  - 高度な: 発展的な
README:
  - スペースと時間: 空間と時間
  - デバイスドライバ: 機器駆動譜
  - リファレンス: 参考資料
closure:
  - キャプチャ: 保存
  - 話して: 聞いて
  - が行うことを何トンも制御し: でできることが大量にあり
  - 特徴: 特性
  - 大量に: 幅広く
concurrency:
  - キャプチャ: 保存
crates-and-modules:
  - サブコモン: 下位役区
documentation:
  - スタンドアロン: 別個
  - ヘッダー: 見出し
  - ボックス: 通い箱
  #糸くずを引き金にする
  #しわ
error-handling:
  - naïvelyを実行: バカ正直に行う
  - イディオム: 慣例
ffi:
  - 海外の全体にアクセスする: 外部大域変数を操作する
getting-started:
  - バックグラウンドから: 経験がある
  - コンベンション: 慣用的名前
glossary:
  - スタンドアロン: 独立的
guessing-game:
  - 上界: 上限
lifetimes:
  - 資源で完了し、それを: 資源を使用し終わって、
  - スタッフ...: 何かする
  - " Expanded。": 延長された
  - 拡張された: 延長された
macros:
  - 衛生: 同名定義の混同回避
  - イディオム: 書き方
syntax-index:
  - インデックス: 索引
testing:
  - 消費者: 消費者
  - 環境またはスイッチ: 環境変数またはスイッチ
  - ボックス: 通い箱
  - テストハーネス: このテスト制約
  - イディオム: 慣例的
the-stack-and-the-heap:
  - 多少の不気味な機能名: 多少の不気味な機能名
traits:
  - ワイルド・ウェストのように: 無秩序きわまって
  - 導く: 導出
trait-objects:
  - 特別な版: 特化した実装
  - 特殊な機能: 特化した機能
type-aliases:
  - サブセクション: 小区分
procedural-macros: []
appendix-02-operators:
  - '`\\\|`': <code>\|</code>
  # more...
SUMMARY:
  - Foreword: 序文
  - Introduction: まえがき
  - Comments: 注釈
  - Installation: 導入
  - Slices: スライス
  - Modules: 役区
  - Vectors: ベクトル
  - Strings: 文字列
  - Testing: テスト
  - Interior Mutability Pattern: 内部可変パターン
  - Threads: 走脈
  - Refutability: 反駁不可能性
  - Appendix: 付録
  - "。": "・"
foreword:
  - エンパワメント: 自信の向上
  - 悪用: 脆弱性
  - 腐敗: 破綻
  - 「ディップダウン」する: 潜り込む
  - セキュリティホール: 安全上の穴
  - リーチ: 広がり
  - ダイビングして: 飛び込んで
ch00-00-introduction:
  - 前書き: まえがき
  - 偶然です: 衝突します
  - 紛争: 両者
  - 誰が欲しいのか: Rustは誰向けか
  - コラボレーション: 共同開発
  - 微妙な点: 巧妙な点
  - 微妙なバグ: 繊細な不具合
  - 学生の: 学生
  - にアクセスしやすく: を利用しやすく
